{"id":"src/App/index.js","dependencies":[{"name":"/Users/zuzatoy/newPet/.babelrc","includedInParent":true,"mtime":1658356441692},{"name":"/Users/zuzatoy/newPet/package.json","includedInParent":true,"mtime":1658702092767},{"name":"./App","loc":{"line":2,"column":20,"index":21},"parent":"/Users/zuzatoy/newPet/src/App/index.js","resolved":"/Users/zuzatoy/newPet/src/App/App.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"App\", {\n  enumerable: true,\n  get: function () {\n    return _App.App;\n  }\n});\n\nvar _App = require(\"./App\");"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":13,"column":0},"source":"src/App/index.js","original":{"line":2,"column":0}}],"sources":{"src/App/index.js":"\nexport { App } from './App';\n// //Q1: reformat a string if string characters occurred 3 times, then you need to remove one of characters,\n// //keep it as two. For instance, if the input string is xxxyxzxxx, the output should be xxyzxx. abccc\n\n// const refactorString = (S) => {\n//   let result = \"\";\n//   let sequence = \"\";\n\n//   if (!(typeof S === 'string')) {\n//       return '';\n//   }\n\n//   for (let i = 0; i < S.length; i++) {\n//     if (S[i - 1] === S[i]) {\n//       sequence += S[i];\n//     } else {\n//       result += (sequence.length >= 2 ? sequence.substring(0, 2) : sequence);\n//       sequence = S[i];\n//     }\n//   }\n\n//   return result += (sequence.length >= 2 ? sequence.substring(0, 2) : sequence);\n// };\n\n// console.log(refactorString(\"xxxtxxx\"));\n// console.log(refactorString(\"eedaaad\"));\n// console.log(refactorString(\"asdasddd\"));\n// console.log(refactorString(\"ddddddddd\"));\n// console.log(refactorString(\"xxxyyyxxxxzzzxxx\"));\n// console.log(refactorString(\"x\"));\n// console.log(refactorString(\"\"));\n// console.log(refactorString(undefined));\n"},"lineCount":null}},"error":null,"hash":"41e954d56f1847f3257f1ef2892ade00","cacheData":{"env":{}}}